C      MODULE POSTPROC
C      CONTAINS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE HISOUT                                                C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE HISOUT(ID,NDOFDIM,NUMNP,NEQ,NINCR,RES,TM,IOUT,COORDS)
C
      IMPLICIT REAL*8(A-H,O-Z)
C
      DIMENSION ID(NDOFDIM,NUMNP),RES(NEQ,NINCR), COORDS(NDOFDIM,NUMNP),
     1          UX(NINCR),UZ(NINCR)
C
      DT=TM/NINCR
      DO II=1,NUMNP
        UX=0.0D0
        UZ=0.0D0
        XX=COORDS(1,II)
        ZZ=COORDS(2,II)
        IX=ID(1,II)
        IZ=ID(2,II)
        IF(IX.NE.0) THEN
          DO JJ=1,NINCR
            UX(JJ)=RES(IX,JJ)
          END DO
        END IF
        IF(IZ.NE.0) THEN
          DO JJ=1,NINCR
            UZ(JJ)=RES(IZ,JJ)
          END DO
        END IF
        WRITE(IOUT,*)
        WRITE(IOUT,6000) II,XX,ZZ
C
        TT=0.0D0
        DO I=1,NINCR
          WRITE(IOUT,6030) TT,UX(I),UZ(I)
          TT=TT+DT
        END DO
      END DO
C
 6000 FORMAT(3X,I5,5X,F8.3,5X,F8.3)
 6010 FORMAT(3X,I5,3X,I5)
 6030 FORMAT(F8.3,5X,F12.7,10X,F12.7)
C
      RETURN
C
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE VTKFILES                                              C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE VTKFILES(COOR,NNUDOS,NELE,NEFF,NEQ,IELCONG,RES,NINC,
     1                    NOD_E)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      DIMENSION IELCONG(NOD_E,NELE),IELCON(NOD_E,NEFF)
      CHARACTER EXT*4,NOMBRE*10,ARCH*20,STR*6
      DIMENSION COOR(2,NNUDOS),RES(NEQ,NINC),DXT(NEQ/2),
     1          DYT(NEQ/2)
      IT_ELE=23	!TIPO DE ELEMENTO DE PARAVIEW
C
      EXT=".vtk"
      NOMBRE="TRS10X5_"
      IAR=101
C
      DO I=1,NOD_E
        DO J=1,NEFF
          IELCON(I,J)=IELCONG(I,J)-1
        END DO
      END DO
C
      DO I=1,NINC
        WRITE(STR,'(I6)') I
        IF (I .GE. 100000) THEN
        ARCH=NOMBRE//STR//EXT
        ELSE IF (I .GE. 10000) THEN
        ARCH=NOMBRE//STR(2:6)//EXT
        ELSE IF (I .GE. 1000) THEN
        ARCH=NOMBRE//STR(3:6)//EXT
        ELSE IF (I .GE. 100) THEN
        ARCH=NOMBRE//STR(4:6)//EXT
        ELSE IF (I .GE. 10) THEN
        ARCH=NOMBRE//STR(5:6)//EXT
        ELSE
        ARCH=NOMBRE//STR(6:6)//EXT
        END IF

        ICONT=1
        DO J=1,NEQ-1,2
			DXT(ICONT)=RES(J,I)
			DYT(ICONT)=RES(J+1,I)
			ICONT=ICONT+1
        END DO

        CALL WRITEVTK(COOR,NNUDOS,NEFF,IELCON,DXT,DYT,ARCH,IAR,IT_ELE,
     1                NEQ,NOD_E)

        IAR=IAR+1

        END DO

        END SUBROUTINE

C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE WRITEVTK                                              C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE WRITEVTK(COOR,NNUDOS,NELE,IELCON,DXT,DYT,ARCH,IAR,
     1                      IT_ELE,NEQ,NOD_E)
C
        IMPLICIT REAL*8(A-H,O-Z)
C
        DIMENSION IELCON(NOD_E,NELE)
        DIMENSION COOR(2,NNUDOS),DXT(NEQ/2),DYT(NEQ/2)
        CHARACTER ARCH*20

        OPEN(UNIT = IAR , FILE = ARCH)

        WRITE(IAR,'(A25)') "# vtk DataFile Version 3.1"
        WRITE(IAR,*) ""
        WRITE(IAR,'(A5)') "ASCII"
        WRITE(IAR,'(A25)') "DATASET UNSTRUCTURED_GRID"
        WRITE(IAR,*) "POINTS",NNUDOS,"float"
        WRITE(IAR,*) ""

        DO I=1,NNUDOS
        WRITE(IAR,'(3F12.5)') COOR(1,I),COOR(2,I),0.0
        END DO
        WRITE(IAR,*) ""

        WRITE(IAR,*) "CELLS",NELE,NELE*(NOD_E+1)

        DO I=1,NELE
        WRITE(IAR,'(I1.1,2X,8(3X,I5))') NOD_E,IELCON(:,I)
        END DO
        WRITE(IAR,*) ""

        WRITE(IAR,*) "CELL_TYPES",NELE
        DO I=1,NELE
        WRITE(IAR,'(I2.2)') IT_ELE
        END DO
        WRITE(IAR,*) ""

        WRITE(IAR,*) "POINT_DATA",NNUDOS
        WRITE(IAR,'(A7,A6,A6)') "VECTORS","DESPL","float"

        DO I=1,NNUDOS
        WRITE(IAR,'(3F12.8)') DXT(I),DYT(I),0.0
        END DO
		
        CLOSE(UNIT = IAR)

        END SUBROUTINE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C              PROGRAMA PARA GENERAR ARCHIVOS PARA PARAVIEW                   C
C                      PARA ELEMENTOS DE 4 NODOS                              C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      SUBROUTINE VTK_4NODES(NP, NELE, NEQ, NDOFDIM, NTIEMPO, COORD,
     1                      MIE, ID, UTMASDT)
C
      IMPLICIT NONE
C
      CHARACTER (25) :: NOMBRE
      CHARACTER (13) :: NPOLY
C
      CHARACTER (4) :: EXTENSION=".vtk"
      CHARACTER (5) :: B
      CHARACTER (28) :: AA="# vtk DataFile Version 4.3.1"
      CHARACTER (59) :: CC
      CHARACTER (5) :: DD ="ASCII"
      CHARACTER (16) :: EE ="DATASET POLYDATA"
      CHARACTER (7) :: FF ="POINTS "
      CHARACTER (16) :: GG ="TRIANGLE_STRIPS "
      CHARACTER (50) :: HH
      CHARACTER (16) :: II
      CHARACTER (16) :: JJ
C
      CHARACTER (11) :: LL ="POINT_DATA "
      CHARACTER (30) :: MM ="SCALARS desplazamientoz double"
      CHARACTER (20) :: NN ="LOOKUP_TABLE default"
C
C
      INTEGER I, J, K, L, W, KK
C
      INTEGER, INTENT(IN):: NP
      INTEGER, INTENT(IN):: NELE
      INTEGER, INTENT(IN):: NEQ
      INTEGER, INTENT(IN):: NDOFDIM
      INTEGER, INTENT(IN):: NTIEMPO
C
      REAL*8 MAGNITUD
C
      INTEGER, DIMENSION(4,NELE), INTENT(IN):: MIE 
      CHARACTER*3 IMP
      REAL*8 juan
      REAL*8 DESPX, DESPY
      REAL*8, DIMENSION(NDOFDIM, NP), INTENT(IN):: COORD
      INTEGER, DIMENSION(NDOFDIM, NP), INTENT(IN):: ID
      REAL*8, DIMENSION(NEQ), INTENT(IN):: UTMASDT
      
      REAL*8, DIMENSION(NP, 2):: UT
C
C
      UT=0.0D0
C
      K=1
C
      DO I=1, NP
        DO J=1, 2
            IF (ID(J,I)>0) THEN
                UT(I,J)=UTMASDT(K)
                K=K+1
            END IF
        END DO
      END DO
C
      CC="this is a test file with scalar field defined at the points"
C
C   LEE LOS DATOS GENERALES DEL PROBLEMA
C
      NPOLY="vtk/Body_T"
C
      WRITE(B,'(I0)') NTIEMPO
C
      NOMBRE=TRIM(NPOLY)//TRIM(B)//TRIM(EXTENSION)
      OPEN(70,FILE=NOMBRE)
C
C     INICIA A LLENAR EL ARCHIVO
C
C     ESCRIBE LAS 1AS LINES DEL FORMATO VTK
C
      WRITE(70,'(A)') AA
      WRITE(70,'(A, /A)') CC
      WRITE(70,'(A)') DD
      WRITE(70,'(A)') EE
      WRITE(II,'(I0)') NP
C
      HH=FF//II//" DOUBLE"
C
      WRITE(70,'(A, /A)') HH
C
C
      DO J=1, NP
C
        DESPX=UT(J,1)
        DESPY=UT(J,2)
C
C    WRITE(70,'(3F10.6)') COORD(1, J)+DESPX/10.0D0, COORD(2, J)+DESPY/10.0D0, 0.0D0
        WRITE(70,'(3F10.6)') COORD(1, J), COORD(2, J), 0.0D0
C
      END DO
C
C
      WRITE(70,'(A)') ""
      WRITE(II,'(I0)') NELE
      WRITE(JJ,'(I0)') NELE*5
      HH=GG//TRIM(II)//" "//JJ
      WRITE(70,'(A)')TRIM(HH)
C
C
      DO J=1, NELE
C
        WRITE(70,'(1I2, 4I9)') 4, MIE(3,J)-1, MIE(4,J)-1, 
     1                             MIE(2,J)-1, MIE(1, J)-1
C
      END DO
C
C
      WRITE(70,'(A)')""
      WRITE(II,'(I0)') NP
      HH=LL//TRIM(II)
      WRITE(70,'(A)') TRIM(HH)
      WRITE(70,'(A)') MM
      WRITE(70,'(A)') NN
C
C
      DO J=1, NP
C
        DESPX=DSQRT(UT(J,1)**2+UT(J,2)**2)

        WRITE(70,'(1F10.6)') DESPX
C
      END DO
C
C
      CLOSE(70)
C
      RETURN
C
C
      END SUBROUTINE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C              PROGRAMA PARA GENERAR ARCHIVOS PARA PARAVIEW                   C
C                      PARA ELEMENTOS DE 8 NODOS                              C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      SUBROUTINE VTK_8NODES(NP, NELE, NEQ, NDOFDIM, NTIEMPO, COORD,
     1                      MIE, ID, UTMASDT)
C
      IMPLICIT NONE
C
      CHARACTER (25) :: NOMBRE
      CHARACTER (13) :: NPOLY
C
      CHARACTER (4) :: EXTENSION=".vtk"
      CHARACTER (5) :: B

      INTEGER I, J, K, L, W, KK
C
      INTEGER, INTENT(IN):: NP
      INTEGER, INTENT(IN):: NELE
      INTEGER, INTENT(IN):: NEQ
      INTEGER, INTENT(IN):: NDOFDIM
      INTEGER, INTENT(IN):: NTIEMPO
C
      REAL*8 MAGNITUD
C
      INTEGER, DIMENSION(8,NELE), INTENT(IN):: MIE 
      CHARACTER*3 IMP
      REAL*8 juan
      REAL*8 DESPX, DESPY
      REAL*8, DIMENSION(NDOFDIM, NP), INTENT(IN):: COORD
      INTEGER, DIMENSION(NDOFDIM, NP), INTENT(IN):: ID
      REAL*8, DIMENSION(NEQ), INTENT(IN):: UTMASDT
      
      REAL*8, DIMENSION(NP, 2):: UT
C
C
      UT=0.0D0
C
      K=1
C
      DO I=1, NP
        DO J=1, 2
            IF (ID(J,I)>0) THEN
                UT(I,J)=UTMASDT(K)
                K=K+1
            END IF
        END DO
      END DO
C
C   LEE LOS DATOS GENERALES DEL PROBLEMA
C
      NPOLY="vtk/Body_T"
C
      WRITE(B,'(I0)') NTIEMPO
C
      NOMBRE=TRIM(NPOLY)//TRIM(B)//TRIM(EXTENSION)
      OPEN(70,FILE=NOMBRE)


      WRITE(70,'(A28)') "# vtk DataFile Version 4.3.1"
      WRITE(70,*) ""
      WRITE(70,'(A5)') "ASCII"
      WRITE(70,'(A25)') "DATASET UNSTRUCTURED_GRID"
      WRITE(70,*) "POINTS",NP,"float"
      WRITE(70,*) ""

      DO J=1, NP

        DESPX=UT(J,1)
        DESPY=UT(J,2)

c        WRITE(70,'(3F10.6)') COORD(1, J)+DESPX/10.0D0, 
c     1                       COORD(2, J)+DESPY/10.0D0, 0.0D0
        WRITE(70,'(3F12.6)') COORD(1, J), COORD(2, J), 0.0D0

      END DO

      WRITE(70,*) ""

      WRITE(70,*) "CELLS", NELE, NELE*9

      DO I=1,NELE
        WRITE(70,'(I1.1,2X,8(3X,I9))') 8, MIE(:,I)-1
      END DO
      WRITE(70,*) ""

      WRITE(70,*) "CELL_TYPES",NELE
      DO I=1,NELE
        WRITE(70,'(I2.2)') 23
      END DO
      WRITE(70,*) ""

      WRITE(70,*) "POINT_DATA",NP
cc      WRITE(70,'(A7,A6,A6)') "VECTORS","DESPL","float"

      WRITE(70,*) "SCALARS displacement double"
      WRITE(70,*) "LOOKUP_TABLE default"


cc      DO I=1,NP
cc        WRITE(70,'(3F12.8)') UT(I,1)/10.0D0, UT(I,2)/10.0D0, 0.0
cc      END DO

      DO J=1, NP
C
        DESPX=DSQRT(UT(J,1)**2+UT(J,2)**2)

        WRITE(70,'(1F10.6)') DESPX
C
      END DO


      CLOSE(70)
      
      RETURN
C
C
      END SUBROUTINE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C              PROGRAMA PARA GENERAR ARCHIVOS PARA PARAVIEW                   C
C                      PARA ELEMENTOS DE 8 NODOS                              C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      SUBROUTINE VTK_9NODES(NP, NELE, NEQ, NDOFDIM, NTIEMPO, COORD,
     1                      MIE, ID, UTMASDT)
C
      IMPLICIT NONE
C
      CHARACTER (25) :: NOMBRE
      CHARACTER (13) :: NPOLY
C
      CHARACTER (4) :: EXTENSION=".vtk"
      CHARACTER (5) :: B

      INTEGER I, J, K, L, W, KK
C
      INTEGER, INTENT(IN):: NP
      INTEGER, INTENT(IN):: NELE
      INTEGER, INTENT(IN):: NEQ
      INTEGER, INTENT(IN):: NDOFDIM
      INTEGER, INTENT(IN):: NTIEMPO
C
      REAL*8 MAGNITUD
C
      INTEGER, DIMENSION(9,NELE), INTENT(IN):: MIE 
      CHARACTER*3 IMP
      REAL*8 juan
      REAL*8 DESPX, DESPY
      REAL*8, DIMENSION(NDOFDIM, NP), INTENT(IN):: COORD
      INTEGER, DIMENSION(NDOFDIM, NP), INTENT(IN):: ID
      REAL*8, DIMENSION(NEQ), INTENT(IN):: UTMASDT
      
      REAL*8, DIMENSION(NP, 2):: UT
C
C
      UT=0.0D0
C
      K=1
C
      DO I=1, NP
        DO J=1, 2
            IF (ID(J,I)>0) THEN
                UT(I,J)=UTMASDT(K)
                K=K+1
            END IF
        END DO
      END DO
C
C   LEE LOS DATOS GENERALES DEL PROBLEMA
C
      NPOLY="vtk/Body_T"
C
      WRITE(B,'(I0)') NTIEMPO
C
      NOMBRE=TRIM(NPOLY)//TRIM(B)//TRIM(EXTENSION)
      OPEN(70,FILE=NOMBRE)


      WRITE(70,'(A28)') "# vtk DataFile Version 4.3.1"
      WRITE(70,*) ""
      WRITE(70,'(A5)') "ASCII"
      WRITE(70,'(A25)') "DATASET UNSTRUCTURED_GRID"
      WRITE(70,*) "POINTS",NP,"float"
      WRITE(70,*) ""

      DO J=1, NP

        DESPX=UT(J,1)
        DESPY=UT(J,2)

c        WRITE(70,'(3F10.6)') COORD(1, J)+DESPX/10.0D0, 
c     1                       COORD(2, J)+DESPY/10.0D0, 0.0D0
        WRITE(70,'(3F12.6)') COORD(1, J), COORD(2, J), 0.0D0

      END DO

      WRITE(70,*) ""

      WRITE(70,*) "CELLS", NELE, NELE*10

      DO I=1,NELE
        WRITE(70,'(I1.1,2X,8(3X,I9))') 9, MIE(:,I)-1
      END DO
      WRITE(70,*) ""

      WRITE(70,*) "CELL_TYPES",NELE
      DO I=1,NELE
        WRITE(70,'(I2.2)') 28
      END DO
      WRITE(70,*) ""

      WRITE(70,*) "POINT_DATA",NP
cc      WRITE(70,'(A7,A6,A6)') "VECTORS","DESPL","float"

      WRITE(70,*) "SCALARS displacement double"
      WRITE(70,*) "LOOKUP_TABLE default"


cc      DO I=1,NP
cc        WRITE(70,'(3F12.8)') UT(I,1)/10.0D0, UT(I,2)/10.0D0, 0.0
cc      END DO

      DO J=1, NP
C
        DESPX=DSQRT(UT(J,1)**2+UT(J,2)**2)

        WRITE(70,'(1F10.6)') DESPX
C
      END DO


      CLOSE(70)
      
      RETURN
C
C
      END SUBROUTINE
C
c        END MODULE POSTPROC
